'use strict';
const should = require('should');
const TestFixtureProvider = require('../dist/commonjs/test_fixture_provider').TestFixtureProvider;

describe('Service Task - ', () => {

  let testFixtureProvider;

  const processModelId = 'service_task_test';
  const startEventId = 'StartEvent_1';
  const useAutoGeneratedCorrelationId = undefined;

  before(async () => {
    testFixtureProvider = new TestFixtureProvider();
    await testFixtureProvider.initializeAndStart();

    await testFixtureProvider.importProcessFiles([processModelId]);
  });

  after(async () => {
    await testFixtureProvider.tearDown();
  });

  it('should return the values which is provided by the test service', async () => {

    const initialToken = {
      test_type: 'basic_test',
    };

    const simpleObject = {
      prop1: 1337,
      prop2: 'Hello World',
    };

    const result = await testFixtureProvider.executeProcess(processModelId, startEventId, useAutoGeneratedCorrelationId, initialToken);

    should(result).have.property('tokenPayload');
    should(result.tokenPayload).be.eql(simpleObject);
  });

  it('should throw an error', async () => {

    const initialToken = {
      test_type: 'throw_exception',
    };

    const expectedErrorMessage = /Failed/i;

    try {
      await testFixtureProvider.executeProcess(processModelId, startEventId, useAutoGeneratedCorrelationId, initialToken);
    } catch (error) {
      should(error.message).be.match(expectedErrorMessage);
    }
  });
});
